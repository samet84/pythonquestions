from IPython.display import clear_output
def display_board(board):
    clear_output()
    print('   |   |')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])
    print('   |   |')

test_board = ['#','x','o','x','o','x','o','x','o','x']
display_board(test_board)
#step 2
def player_input():
    marker = ''
    while marker != 'x' and marker != 'o':
        marker = input('Player1, choose x or o')
    
    if marker == 'x':
        return ('x','o')
    else:
        return ('o','x')
    
player1_marker , player2_marker = player_input()
#step 3
def place_marker(board, marker, position):
    board[position] = marker
place_marker(test_board, '$',8)
display_board(test_board)
#step 4
def win_check(board,mark):
    return ((board[1] == mark and board[2] == mark and board[3] == mark) or # across the top
    (board[4] == mark and board[5] == mark and board[6] == mark) or # across the middle
    (board[7] == mark and board[8] == mark and board[9] == mark) or # across the bottom
    (board[1] == mark and board[4] == mark and board[7] == mark) or # down the middle
    (board[2] == mark and board[5] == mark and board[8] == mark) or # down the middle
    (board[3] == mark and board[6] == mark and board[9] == mark) or # down the right side
    (board[1] == mark and board[5] == mark and board[9] == mark) or # diagonal
    (board[3] == mark and board[5] == mark and board[7] == mark)) # diagonal
    
import random

def choose_first():
    flip = random.randint(0,1)
    if flip == 0:
        return 'player1'
    else:
        return 'player 2'
def space_check(board,position):
    return board[position] == ' '
def full_board_check(board):
    for i in range(1,10):
        if space_check(board,i):
            return False
    return True
def player_choice(board):
    position = 0
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board,bosition):
        position =int(input('Choose a position: (1-9)'))
    return position
def replay():
    choice = input("Play again? enter Yes or No")
    return choice == 'Yes'
print("welcome to Tic Tac Toe")
while True:
    the_board = [' ']*10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(turn + 'will go first')
    play_game = input('ready to play? y or n?')
    
    if play_game == 'y':
        game_on = True
    else:
        game_on = False
    
    while game_on:
        
        if turn == 'Player1':
            display_board(the_board)
            position = player_choice(the_board)
            place_marker(the_board,player1_marker,position)
            if win_check(the_board,player1_marker,):
                display_board(the_board)
                print('Player 1 has won')
            
                game_on = False
            else:
                if full_board_check(the_board):
                    display_board(the_board)
                    print("TIE GAME!")
                    break
                else:
                    turn = 'Player 2'
    else:
            display_board(the_board)
            position = player_choice(the_board)
            place_marker(the_board,player2_marker,position)
            if win_check(the_board,player2_marker,):
                display_board(the_board)
                print('Player 2 has won')
            
                game_on = False
            else:
                if full_board_check(the_board):
                    display_board(the_board)
                    print("TIE GAME!")
                    break
                else:
                    turn = 'Player 1'
    if not reply():
        break
#New one up there

from IPython.display import clear_output
def display_board(board):
    clear_output()
    print(board[1]+'|'+board[2]+ '|'+board[3])
    print('-|-|-')
    print(board[4]+'|'+board[5]+ '|'+board[6])
    print('-|-|-')
    print(board[7]+'|'+board[8]+ '|'+board[9])
test_board = ['#','x','o','x','o','x','o','x','o','x']
display_board(test_board)
#step 2
def player_input():
    marker = ''
    while marker != 'x' and marker != 'o':
        marker = input('Player1, choose x or o')
    
    if marker == 'x':
        return ('x','o')
    else:
        return ('o','x')
    
player1_marker , player2_marker = player_input()
#step 3
def place_marker(board, marker, position):
    board[position] = marker
place_marker(test_board, '$',8)
display_board(test_board)
#step 4
def win_check(board,mark):
    (board[1] == mark and board[2] == mark and board[3] == mark) or
    (board[4] == board[5] == board[6] == mark) or
    (board[7] == board[8] == board[9] == mark)
    
import random

def choose_first():
    flip = random.randint(0,1)
    if flip == 0:
        return 'player1'
    else:
        return player 2
def space_check(board,position):
    return board[position] == ' '
def full_board_check(board):
    for i in range(1,10):
        if space_check(board,i):
            return False
    return True
def player_choice(board):
    position = 0
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board,bosition):
        position =int(input('Choose a position: (1-9)'))
    return position
def replay():
    choice = input("Play again? enter Yes or No")
    return choice == 'Yes'
print("welcome to Tic Tac Toe")
while True:
    the_board = [' ']*10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(turn + 'will go first')
    play_game = input('ready to play? y or n?')
    
    if play_game == 'y':
        game_on = True
    else:
        game_on = False
    
    while game_on:
        
        if turn == 'Player1':
            display_board(the_board)
            position = player_choice(the_board)
            place_marker(the_board,player1_marker,position)
            if win_check(the_board,player1_marker,):
                display_board(the_board)
                print('Player 1 has won')
            
                game_on = False
            else:
                if full_board_check(the_board):
                    display_board(the_board)
                    print("TIE GAME!")
                    break
                else:
                    turn = 'Player 2'
    else:
            display_board(the_board)
            position = player_choice(the_board)
            place_marker(the_board,player2_marker,position)
            if win_check(the_board,player2_marker,):
                display_board(the_board)
                print('Player 2 has won')
            
                game_on = False
            else:
                if full_board_check(the_board):
                    display_board(the_board)
                    print("TIE GAME!")
                    break
                else:
                    turn = 'Player 1'
    if not reply():
        break

